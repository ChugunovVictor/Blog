{"version":3,"sources":["./src/app/components/side-navigation.component.ts","./src/environments/environment.ts","./src/app/components/view.component.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport toc from '../../assets/table_of_contents/table_of_contents.json'\nimport { Menu, MenuItem } from \"../model/menu\";\n\n@Component({\n    selector: 'app-side-navigation',\n    template: `\n        <ul class=\"app-side-navigation\">\n            <li *ngFor=\"let menu of root\">\n                {{ menu.title }}\n                <ul class=\"menuItemList\">\n                    <li *ngFor=\"let item of menu.children\">\n                        <a routerLink=\"/view\" [queryParams]=\"{ path: menu.path + '/' + item.path }\" routerLinkActive=\"active\">{{ item.title }}</a>\n                    </li>\n                </ul>\n            </li>\n        </ul>\n    `,\n    styles: [\n            `:host {\n            width: 150px;\n            margin: 8px;\n            display: flex;\n        }`,\n            `:host:after {\n            content: \"\";\n            float: left;\n            background: black;\n            width: 2px;\n            height: 100%;\n            border-radius: 2px;\n        }`,\n            `.app-side-navigation {\n            padding: 8px;\n        }`,\n            `.menuItemList{\n            font-size: small;\n            padding-inline-start: 10px;\n        }`\n    ]\n})\nexport class SideNavigationComponent implements OnInit {\n    root: Menu[];\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        this.root = toc.root\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\n\n//https://github.com/MTobisch/ngx-dynamic-hooks\n\n@Component({\n  selector: 'app-view',\n  template: `\n    <ngx-dynamic-hooks [content]=\"content\"></ngx-dynamic-hooks>\n  `,\n  styles: [\n  ]\n})\nexport class ViewComponent implements OnInit {\n\n  content: string = ''\n\n  constructor( private http: HttpClient, private route: ActivatedRoute ) {\n    route.queryParams.subscribe(\n        params => http.get('./assets/table_of_contents/' + params['path'], {responseType: 'text'}).subscribe(data => {\n          this.content = data;\n        })\n    )\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<div class=\"app-root\">\n    <app-side-navigation></app-side-navigation>\n    <router-outlet></router-outlet>\n    </div>\n  `\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { KatexModule, KatexParagraphComponent } from 'ng-katex';\nimport { SideNavigationComponent } from './components/side-navigation.component';\nimport { ViewComponent } from './components/view.component';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { DynamicHooksModule, HookParserEntry } from 'ngx-dynamic-hooks';\n\nconst componentParsers: Array<HookParserEntry> = [\n   { component: KatexParagraphComponent },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SideNavigationComponent,\n    ViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    KatexModule,\n    AppRoutingModule,\n    HttpClientModule,\n    DynamicHooksModule.forRoot({\n      globalParsers: componentParsers\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [  KatexParagraphComponent  ],\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AppComponent} from \"./app.component\";\nimport {ViewComponent} from \"./components/view.component\";\n\nconst routes: Routes = [\n  { path: 'app', component: AppComponent },\n  { path: 'view', component: ViewComponent },\n  { path: '',   redirectTo: '/app', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}